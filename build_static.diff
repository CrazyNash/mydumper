diff --git a/CMakeLists.txt b/CMakeLists.txt
index 8a67836..e76c603 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -29,6 +29,10 @@ MARK_AS_ADVANCED(CMAKE)
 
 CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/config.h.in ${CMAKE_CURRENT_SOURCE_DIR}/config.h)
 
+set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -pthread")
+SET(CMAKE_FIND_LIBRARY_SUFFIXES ".a")
+SET(BUILD_SHARED_LIBRARIES OFF)
+SET(CMAKE_EXE_LINKER_FLAGS "-static")
 
 if (WITH_BINLOG)
   add_executable(mydumper mydumper.c binlog.c server_detect.c g_unix_signal.c)
diff --git a/g_unix_signal.c b/g_unix_signal.c
index 557fb15..ebd19ac 100644
--- a/g_unix_signal.c
+++ b/g_unix_signal.c
@@ -98,7 +98,7 @@ static void g_unix_signal_source_init(GSource *source, gint signum)
 	g_ptr_array_add(signal_data, signal_source->data);
 }
 
-GSource *g_unix_signal_source_new(gint signum)
+GSource *gg_unix_signal_source_new(gint signum)
 {
 	GSource *source = g_source_new(&SourceFuncs, sizeof(GUnixSignalSource));
 	g_unix_signal_source_init(source, signum);
@@ -110,10 +110,10 @@ GSource *g_unix_signal_source_new(gint signum)
 	return source;
 }
 
-guint g_unix_signal_add_full(gint priority, gint signum, GSourceFunc function, gpointer data, GDestroyNotify notify)
+guint gg_unix_signal_add_full(gint priority, gint signum, GSourceFunc function, gpointer data, GDestroyNotify notify)
 {
 	g_return_val_if_fail(function != NULL, 0);
-	GSource *source = g_unix_signal_source_new(signum);
+	GSource *source = gg_unix_signal_source_new(signum);
 	if (priority != G_PRIORITY_DEFAULT)
 		g_source_set_priority (source, priority);
 	g_source_set_callback(source, function, data, notify);
@@ -122,7 +122,7 @@ guint g_unix_signal_add_full(gint priority, gint signum, GSourceFunc function, g
 	return id;
 }
 
-guint g_unix_signal_add(gint signum, GSourceFunc function, gpointer data)
+guint gg_unix_signal_add(gint signum, GSourceFunc function, gpointer data)
 {
-	return g_unix_signal_add_full(G_PRIORITY_DEFAULT, signum, function, data, NULL);
+	return gg_unix_signal_add_full(G_PRIORITY_DEFAULT, signum, function, data, NULL);
 }
diff --git a/g_unix_signal.h b/g_unix_signal.h
index f9d6f8b..9f247d3 100644
--- a/g_unix_signal.h
+++ b/g_unix_signal.h
@@ -3,8 +3,8 @@
 
 #include <glib.h>
 
-GSource *g_unix_signal_source_new(gint signum);
-guint g_unix_signal_add(gint signum, GSourceFunc function, gpointer data);
-guint g_unix_signal_add_full(gint priority, gint signum, GSourceFunc function, gpointer data, GDestroyNotify notify);
+GSource *gg_unix_signal_source_new(gint signum);
+guint gg_unix_signal_add(gint signum, GSourceFunc function, gpointer data);
+guint gg_unix_signal_add_full(gint priority, gint signum, GSourceFunc function, gpointer data, GDestroyNotify notify);
 
 #endif /* G_UNIX_SIGNAL_H */
diff --git a/mydumper.c b/mydumper.c
index cf1d0ef..97cfbef 100644
--- a/mydumper.c
+++ b/mydumper.c
@@ -923,8 +923,8 @@ int main(int argc, char *argv[])
 		#else
 		g_timeout_add_seconds(snapshot_interval*60, (GSourceFunc) run_snapshot, NULL);
 		#endif
-		guint sigsource= g_unix_signal_add(SIGINT, sig_triggered, NULL);
-		sigsource= g_unix_signal_add(SIGTERM, sig_triggered, NULL);
+		guint sigsource= gg_unix_signal_add(SIGINT, sig_triggered, NULL);
+		sigsource= gg_unix_signal_add(SIGTERM, sig_triggered, NULL);
 		m1= g_main_loop_new(NULL, TRUE);
 		g_main_loop_run(m1);
 		g_source_remove(sigsource);
